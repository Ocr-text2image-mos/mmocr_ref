version: 2.1
jobs:
  build_cu101:
    environment:
      PYTHON_VERSION: "3.9"
    machine:
      image: ubuntu-1604-cuda-10.1:201909-23
    resource_class: gpu.nvidia.small
    steps:
      - checkout
      - run:
          name: Install Libraries
          command: |
            sudo apt-get update
            sudo apt-get install -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 libgl1-mesa-glx
      - run:
          name: Install PyTorch
          command: python3 -m pip install torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html
      - run:
          name: Install mmocr dependencies
          # python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu101/torch${{matrix.torch_version}}/index.html
          command: |
            python3 -m pip install wheel
            python3 -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu101/torch1.6.0/index.html
            python3 -m pip install mmdet
            python3 -m pip install -r requirements.txt
      - run:
          name: Build and install
          command: |
            python3 setup.py check -m -s
            TORCH_CUDA_ARCH_LIST=7.0 python3 -m pip install -e .
      - run:
          name: Run unittests
          command: |
            pytest tests/

      # - run:
      #     name: Run tests
      #     command: |
      #       wget https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-ubuntu1604-10-1-local-10.1.105-418.39_1.0-1_amd64.deb
      #       sudo dpkg -i cuda-repo-ubuntu1604-10-1-local-10.1.105-418.39_1.0-1_amd64.deb
      #       sudo apt-key add /var/cuda-repo-10-1-local-10.1.105-418.39/7fa2af80.pub
      #       sudo apt-get update
      #       sudo apt-get install cuda
      #       nvidia-smi
      # - run:
      #     name: Add python3.9 source
      #     command: |
      #       sudo apt-get update
      #       sudo apt-get install -y software-properties-common
      #       sudo add-apt-repository -y ppa:deadsnakes/ppa
      # # Install python-dev for some packages which require libpython3.Xm.
      # # Github's setup-python cannot install python3.9-dev, so we have to use apt install.
      # # Set DEBIAN_FRONTEND=noninteractive to avoid some interactions.
      # - run:
      #     name: Install Python-dev
      #     # command: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python${{matrix.python-version}}-dev
      #     command: |
      #       DEBIAN_FRONTEND=noninteractive sudo apt-get install -y python3.9
      #       python3 --version
      # - run:
      #     name: Upgrade pip
      #     command: python3 -m pip install pip --upgrade
      # - run:
      #     name: Install system dependencies
      #     command: |
      #       sudo apt-get update
      #       sudo apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 curl libncurses5
      # - run:
      #     name: Install librosa and soundfile
      #     command: python3 -m pip install librosa soundfile
      # - run:
      #     name: Install lmdb
      #     command: python3 -m pip install lmdb
      # - run:
      #     name: Install mmocr dependencies
      #     command: |
      #       python3 -m pip install wheel
      #       python3 -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu101/torch1.6.0/index.html
      #       python3 -m pip install mmdet
      #       python3 -m pip install -r requirements.txt
      # - run:
      #     name: Build and install
      #     command: |
      #       rm -rf .eggs
      #       python3 setup.py check -m -s
      #       TORCH_CUDA_ARCH_LIST=7.0 python3 -m pip install -e .
      # - run:
      #     name: Run unittests
      #     command: |
      #       pytest tests/

workflows:
  unit_tests:
    jobs:
      - build_cu101
